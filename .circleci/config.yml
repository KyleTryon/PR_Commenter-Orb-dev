version: 2.1
#first dev
orbs:
  orb-tools: circleci/orb-tools@volatile
  prcommenter: sandbox/prcommenter@dev:alpha
  cli: circleci/circleci-cli@volatile


workflows:
  lint_pack-validate_publish-dev:
    jobs:
      - orb-tools/lint

      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: sandbox/prcommenter
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the dev version of your orb
      # an SSH key must be stored in your orb's repository and in CircleCI
      # (add the public key as a read/write key on GitHub; add the private
      # key in CircleCI via SSH Permissions, with github.com as Hostname)
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-dev
          ssh-fingerprints: a2:a0:35:2b:55:af:41:07:f6:09:1e:fe:56:85:c4:f3
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              ignore: master

      # by default, the 1st job (above) will trigger only integration tests;
      # the 2nd job (below) may also publish a production orb version
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-master
          ssh-fingerprints: a2:a0:35:2b:55:af:41:07:f6:09:1e:fe:56:85:c4:f3
          tag: master
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              only: master

    # this `integration-tests_prod-release` workflow will ignore commits
    # it is only triggered by git tags, which are created in the job above
  integration-tests_prod-release:
    jobs:
      # your integration test jobs go here: essentially, run all your orb's
      # jobs and commands to ensure they behave as expected. or, run other
      # integration tests of your choosing

      # this would need to be defined in a `jobs` section (not shown here)
      - prcommenter/commentpr:
          name: integration-tests-dev
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /integration-.*/

      # call jobs twice, once for workflows resulting from non-master-branch
      # commits (above); once for commits to master (below)
      - prcommenter/commentpr:
          name: integration-tests-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/

      # patch, minor, or major publishing, depending on which orb source
      # files have been modified (that logic lives in the
      # trigger-integration-workflow job's source)
      - orb-tools/dev-promote-prod:
          name: dev-promote-patch
          orb-name: sandbox/prcommenter
          requires:
            - integration-tests-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-patch.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-minor
          release: minor
          orb-name: sandbox/prcommenter
          requires:
            - integration-tests-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-minor.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-major
          release: major
          orb-name: sandbox/prcommenter
          requires:
            - integration-tests-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-major.*/
